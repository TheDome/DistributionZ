name: Compile assets

on:
  release:
    types:
      - released

jobs:
  compile-release-assets:
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x]
        config:
          - os: ubuntu-latest
            artifact: DistributionZ-${{ github.event.release.tag_name }}.AppImage
            updater-file: latest-linux.yml
          - os: macos-latest
            artifact: DistributionZ-${{ github.event.release.tag_name }}.dmg
          - os: macos-latest
            artifact: DistributionZ-${{ github.event.release.tag_name }}-mac.zip
            updater-file: latest-mac.yml
          - os: windows-latest
            artifact: DistributionZ Setup ${{ github.event.release.tag_name }}.exe
            updater-file: latest.yml
    runs-on: ${{ matrix.config.os }}
    name: Compile release asset ${{ matrix.config.artifact }} for ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Build on Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.5.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set version
        shell: bash
        run: |
          npm version --no-git-tag-version ${{ github.event.release.tag_name }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn --frozen-lockfile
      - run:  |
          yarn build
        name: Build
      - name: Create sha256 of release asset
        shell: bash
        # if macos-latest, use shasum -a 256
        if: ${{ matrix.config.os == 'macos-latest' }}
        run: |
          shasum -a 256 "dist/${{ matrix.config.artifact }}" > dist/${{ matrix.config.artifact }}.sha256sum
      - name: Create sha256 of release asset
        shell: bash
        # if ubuntu-latest, use sha256sum
        if: ${{ matrix.config.os != 'macos-latest' }}
        run: |
          sha256sum "dist/${{ matrix.config.artifact }}" > "dist/${{ matrix.config.artifact }}.sha256sum"
      - name: Upload release asset
        uses: actions/github-script@v6
        id: upload-release-asset
        with:
          script: |
            const fs = require('fs');

            const contentLength = filePath => fs.statSync(filePath).size;

            const headers = { 'content-type': "application/octet-stream", 'content-length': contentLength("dist/${{ matrix.config.artifact }}") };

             const uploadAssetResponse = await github.rest.repos.uploadReleaseAsset({
                url: "${{ github.event.release.upload_url }}",
                headers,
                name: "${{ matrix.config.artifact }}",
                file: fs.readFileSync("dist/${{ matrix.config.artifact }}")
              });

              const { data: { id: assetId , browser_download_url, name } } = uploadAssetResponse;

              return { name, browser_download_url };
      - name: Upload Release Asset sha256sum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/${{ matrix.config.artifact }}.sha256sum
          asset_name: ${{ matrix.config.artifact }}.sha256sum
          asset_content_type: text/plain
      - name: Upload Release Asset Updater File
        uses: actions/github-script@v5
        if: ${{ matrix.config.updater-file }}
        env:
          FILE_URL: ${{ steps.upload-release-asset.outputs.name }}
        with:
          script: |
            const latestJSON = {
              releaseNotes: context.payload.release.body,
              releaseName: `Savannah ${context.payload.release.tag_name}`,
              version: context.payload.release.tag_name,
              files: []
            };

            // Read checksum from file
            const checksum = require('fs').readFileSync(`dist/${{ matrix.config.artifact }}.sha256sum`, 'utf8').split(' ')[0];

            // Remove all from the url except after the last slash
            const url = process.env.FILE_URL

            latestJSON.files.push({
              url: process.env.FILE_URL,
              sha512: checksum,
            });

            // Upload release file
            await github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: context.payload.release.id,
                name: "${{ matrix.config.updater-file }}",
                data: JSON.stringify(latestJSON, null, 2)
              });